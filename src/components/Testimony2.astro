---
import { Image } from "astro:assets";
import testimony from "../assets/testimony.png";
const testimonios = [
  {
    nombre: "Luis Vasquez",
    cargo: "CEO",
    texto:
      "Monitoreo satelital en tiempo real (homologado por CESVI) para que sigas cada paso de tu carga.",
    imagen: testimony,
  },
  {
    nombre: "Ana Gómez",
    cargo: "Directora de Logística",
    texto:
      "Gracias a su sistema, optimizamos nuestras rutas y reducimos los tiempos de entrega.",
    imagen: testimony,
  },
  {
    nombre: "Juan mata",
    cargo: "Directora de Logística",
    texto:
      "Gracias a su sistema, optimizamos nuestras rutas y reducimos los tiempos de entrega.",
    imagen: testimony,
  },
];
---

<section class="testimonios">
  <div class="container__global">
    <div class="testimonios__contenedor" id="slider">
      {
        testimonios.map((t, i) => (
          <figure class="testimonios__item" data-index={i}>
            <div class="testimonios__descripcion">
              <div class="testimonios__imagen">
                <svg
                  width="263"
                  height="264"
                  viewBox="0 0 263 264"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                  class="testimonios__icon"
                >
                  <mask
                    id="mask0_231_576"
                    style="mask-type:alpha"
                    maskUnits="userSpaceOnUse"
                    x="0"
                    y="0"
                    width="263"
                    height="264"
                  >
                    <rect
                      x="0.21875"
                      y="0.886719"
                      width="262.43"
                      height="262.43"
                      fill="#D9D9D9"
                    />
                  </mask>
                  <g mask="url(#mask0_231_576)">
                    <path
                      d="M62.5458 197.708L87.6953 153.97C75.6673 153.97 65.3706 149.687 56.8052 141.122C48.2397 132.556 43.957 122.259 43.957 110.231C43.957 98.2034 48.2397 87.9067 56.8052 79.3413C65.3706 70.7759 75.6673 66.4932 87.6953 66.4932C99.7233 66.4932 110.02 70.7759 118.585 79.3413C127.151 87.9067 131.434 98.2034 131.434 110.231C131.434 114.423 130.932 118.296 129.93 121.849C128.928 125.403 127.424 128.82 125.42 132.101L87.6953 197.708H62.5458ZM160.957 197.708L186.106 153.97C174.078 153.97 163.782 149.687 155.216 141.122C146.651 132.556 142.368 122.259 142.368 110.231C142.368 98.2034 146.651 87.9067 155.216 79.3413C163.782 70.7759 174.078 66.4932 186.106 66.4932C198.134 66.4932 208.431 70.7759 216.997 79.3413C225.562 87.9067 229.845 98.2034 229.845 110.231C229.845 114.423 229.344 118.296 228.341 121.849C227.339 125.403 225.835 128.82 223.831 132.101L186.106 197.708H160.957ZM87.6953 126.633C92.2514 126.633 96.124 125.039 99.3133 121.849C102.503 118.66 104.097 114.788 104.097 110.231C104.097 105.675 102.503 101.803 99.3133 98.6135C96.124 95.4242 92.2514 93.8296 87.6953 93.8296C83.1392 93.8296 79.2666 95.4242 76.0773 98.6135C72.8881 101.803 71.2935 105.675 71.2935 110.231C71.2935 114.788 72.8881 118.66 76.0773 121.849C79.2666 125.039 83.1392 126.633 87.6953 126.633ZM186.106 126.633C190.663 126.633 194.535 125.039 197.724 121.849C200.914 118.66 202.508 114.788 202.508 110.231C202.508 105.675 200.914 101.803 197.724 98.6135C194.535 95.4242 190.663 93.8296 186.106 93.8296C181.55 93.8296 177.678 95.4242 174.488 98.6135C171.299 101.803 169.705 105.675 169.705 110.231C169.705 114.788 171.299 118.66 174.488 121.849C177.678 125.039 181.55 126.633 186.106 126.633Z"
                      fill="#363636"
                    />
                  </g>
                </svg>

                <Image src={t.imagen} alt={`Foto de ${t.nombre}`} />
              </div>
              <div class="testimonios__autor">
                <p class="testimonios__nombre">{t.nombre}</p>
                <p class="testimonios__cargo">{t.cargo}</p>
              </div>
            </div>

            <figcaption class="testimonios__contenido">
              <blockquote class="testimonios__texto">{t.texto}</blockquote>
            </figcaption>
          </figure>
        ))
      }
    </div>

    <div class="testimonios__controles">
      <button
        class="testimonios__btn"
        id="prev"
        aria-label="Testimonio anterior">←</button
      >
      <button
        class="testimonios__btn testimonios__btn--rojo"
        id="next"
        aria-label="Siguiente testimonio">→</button
      >
    </div>
  </div>
</section>

<style>
  .testimonios {
    background-color: var(--black);
    color: #f0f0f0;
    padding-block: 4rem;
    overflow: clip;
  }

  .testimonios__contenedor {
    position: relative;
  }
  .testimonios__descripcion {
    display: flex;
    justify-content: space-between;
  }
  .testimonios__item {
    box-sizing: border-box;
    margin: 0;
    display: flex;
    flex-direction: column;
    gap: 3rem;
    border-bottom: 1px solid #444;
    padding-bottom: 1rem;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    opacity: 0;
  }

  .testimonios__imagen img {
    object-fit: cover;
  }

  .testimonios__imagen {
    position: relative;
    isolation: isolate;
  }

  .testimonios__icon {
    position: absolute;
    top: -4rem;
    left: 12rem;
    z-index: -1;
    height: auto;
  }
  .testimonios__contenido {
    flex: 1;
  }

  .testimonios__autor {
    text-align: right;
  }

  .testimonios__nombre {
    font-weight: bold;
    font-size: 1.2rem;
  }

  .testimonios__cargo {
    font-size: 0.8rem;
    text-transform: uppercase;
    color: #999;
  }

  .testimonios__texto {
    margin: 0;
    font-size: var(--step-2);
    color: #ccc;
    line-height: 1.5;
  }

  .testimonios__controles {
    display: flex;
    justify-content: space-between;
    margin-top: 1.5rem;
  }

  .testimonios__btn {
    border: 1px solid red;
    background: transparent;
    color: red;
    border-radius: 999px;
    padding: 0.5rem 1rem;
    cursor: pointer;
    font-size: 1.2rem;
    transition: all 0.2s ease;
  }

  .testimonios__btn:hover {
    background: rgba(255, 0, 0, 0.1);
  }

  .testimonios__btn--rojo {
    background: red;
    color: white;
  }

  @media (max-width: 550px) {
    .testimonios__descripcion {
      align-items: start;
      flex-direction: column;
    }

    .testimonios__autor {
      text-align: left;
    }
  }
</style>

<script>
  // @ts-ignore
  import { gsap } from "gsap";

  document.addEventListener("astro:page-load", () => {
    const slider = document.getElementById("slider");
    const items = slider?.querySelectorAll(".testimonios__item");
    const nextButton = document.getElementById("next");
    const prevButton = document.getElementById("prev");
    let current = 0;
    let isAnimating = false;

    if (!items || items.length === 0) {
      console.warn(
        "Slider: No se encontraron testimonios o el elemento slider no existe."
      );
      return;
    }

    // --- Función para ajustar la altura del slider y configurar slides iniciales ---
    function adjustSliderHeightAndSetup() {
      if (!slider || !items || items.length === 0) return;
      let maxHeight = 0;

      // Fase 1: Medir todos los items para encontrar la altura máxima
      items.forEach((item) => {
        const originalDisplay = item.style.display; // Guardar display original

        item.style.display = "flex"; // O el display que usas (e.g., 'block')

        maxHeight = Math.max(maxHeight, item.offsetHeight);

        item.style.display = originalDisplay;
      });

      // Aplicar la altura máxima al contenedor del slider
      if (maxHeight > 0) {
        slider.style.height = maxHeight + "px";
      }

      items.forEach((item, index) => {
        if (index !== current) {
          gsap.set(item, { opacity: 0, xPercent: 100 });
        } else {
          gsap.set(item, { opacity: 1, xPercent: 0 });
        }
      });
    }

    // Llamar a la función para ajustar altura y configurar slides al inicio
    adjustSliderHeightAndSetup();

    // --- Función para Animar los Testimonios --- (SIN CAMBIOS, igual que antes)
    function animateSlides(newIndex, direction) {
      if (isAnimating || newIndex === current) {
        return;
      }
      isAnimating = true;

      const outgoingItem = items[current];
      const incomingItem = items[newIndex];
      const duration = 0.4;
      const xDisplacement = 100;
      const ease = "power2.inOut";

      if (direction === "next") {
        gsap.set(incomingItem, { xPercent: xDisplacement });
      } else {
        gsap.set(incomingItem, { xPercent: -xDisplacement });
      }

      const tl = gsap.timeline({
        onComplete: () => {
          outgoingItem.style.opacity = 0;
          gsap.set(outgoingItem, {
            xPercent: direction === "next" ? xDisplacement : -xDisplacement,
          });
          isAnimating = false;
        },
      });

      tl.to(outgoingItem, {
        xPercent: direction === "next" ? -xDisplacement : xDisplacement,
        opacity: 0,
        duration: duration,
        ease: ease,
      });

      tl.to(
        incomingItem,
        {
          xPercent: direction === "next" ? 0 : 0,
          opacity: 1,
          duration: duration,
          ease: ease,
        },
        "-=0.5"
      );

      current = newIndex;
    }

    // --- Event Listeners para los Botones --- (SIN CAMBIOS, igual que antes)
    nextButton?.addEventListener("click", () => {
      if (items.length === 0) return;
      const newIndex = (current + 1) % items.length;
      animateSlides(newIndex, "next");
    });

    prevButton?.addEventListener("click", () => {
      if (items.length === 0) return;
      const newIndex = (current - 1 + items.length) % items.length;
      animateSlides(newIndex, "prev");
    });
  });
</script>
